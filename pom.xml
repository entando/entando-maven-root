<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.entando</groupId>
    <artifactId>entando-maven-root</artifactId>
    <version>6.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Entando Maven Root Parent POM</name>
    <description>Entando Maven Root Parent POM</description>
    <inceptionYear>2019</inceptionYear>
    <url>https://central.entando.com</url>

    <licenses>
        <license>
            <name>GNU LESSER GENERAL PUBLIC LICENSE, Version 2.1, February 1999</name>
            <url>https://www.gnu.org/licenses/lgpl-2.1.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>Entando Inc.</name>
        <url>https://www.entando.com/</url>
    </organization>
    <repositories>
        <repository>
            <id>nexus-jx</id>
            <url>https://nexus-jx.apps.serv.run/repository/maven-releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <scm>
        <connection>scm:git:git@github.com:${github.organization}/${project.artifactId}.git</connection>
        <developerConnection>scm:git:git@github.com:${github.organization}/${project.artifactId}.git
        </developerConnection>
        <url>https://github.com/${github.organization}/${project.artifactId}/</url>
        <tag>HEAD</tag>
    </scm>
    <properties>
        <verifyAllFailures>true</verifyAllFailures>
        <ignoreAllFailures>false</ignoreAllFailures>
        <skipInterProcessTests>true</skipInterProcessTests>
        <skipInProcessTests>true</skipInProcessTests>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <github.organization>entando-k8s-infrastructure</github.organization>
        <!--Standard Sonar configuration -->
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>${github.organization}</sonar.organization>
        <sonar.projectKey>${github.organization}_${project.artifactId}</sonar.projectKey>
        <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.java.checkstyle.reportPaths>target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>

        <!--dependencies -->
        <resteasy.version>3.9.3.Final</resteasy.version>
        <keycloak.version>7.0.1</keycloak.version>
        <quarkus.version>1.2.0.Final</quarkus.version>
        <jackson.version>2.10.1</jackson.version>
        <okhttp.version>3.12.1</okhttp.version>
        <jcabi.version>1.1</jcabi.version>
        <commons-lang.version>3.9</commons-lang.version>
        <fabric8.version>4.7.0</fabric8.version>
        <prometheus.metrics.version>0.6.0</prometheus.metrics.version>
        <guava.version>24.1.1-jre</guava.version>
        <snakeyaml.version>1.23</snakeyaml.version>
        <slf4j.version>1.7.16</slf4j.version>
        <postgresql.driver.version>42.2.8</postgresql.driver.version>
        <!-- test dependencies -->

        <junit.version>5.4.2</junit.version>
        <mockito.version>2.23.0</mockito.version>
        <awaitility.version>4.0.1</awaitility.version>
        <hamcrest.version>2.1</hamcrest.version>
        <jaway.jsonpath.version>2.4.0</jaway.jsonpath.version>
        <jakarta.validation.api.version>2.0.2</jakarta.validation.api.version>

        <!-- plugin  versions -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M1</maven-surefire-plugin.version>
        <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M4</maven-failsafe-plugin.version>
        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
        <maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
        <maven-source-plugin.version>3.1.0</maven-source-plugin.version>
        <maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
        <maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
        <maven-site-plugin.version>3.8.2</maven-site-plugin.version>
        <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
        <dependency-check-maven.version>5.2.4</dependency-check-maven.version>
        <maven-surefire-report-plugin.version>3.0.0-M4</maven-surefire-report-plugin.version>
    </properties>
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/${github.organization}/${project.artifactId}/issues/</url>
    </issueManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire-report-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>unit-tests</id>
                            <goals>
                                <goal>report-only</goal>
                            </goals>
                            <phase>verify</phase>
                            <configuration>
                                <outputDirectory>target/site/</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>failsafe-report-only</goal>
                            </goals>
                            <phase>post-integration-test</phase>
                            <configuration>
                                <outputDirectory>target/site/</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <suppressionFile>${project.basedir}/config/owasp-dependency-check-suppression.xml
                        </suppressionFile>
                        <failOnError>true</failOnError>
                        <failBuildOnAnyVulnerability>${verifyAllFailures}</failBuildOnAnyVulnerability>
                        <name>National Vulnerability Database Report</name>
                        <formats>HTML,XML,JUNIT</formats>
                        <outputDirectory>target/site</outputDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgresql.driver.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <!--Bring it into core Maven build lifecycle for Sonar without needing the site phase-->
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skip>${skipInProcessTests}</skip>
                        <forkCount>1</forkCount>
                        <testFailureIgnore>${ignoreAllFailures}</testFailureIgnore>
                        <groups>in-process</groups>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <testFailureIgnore>${ignoreAllFailures}</testFailureIgnore>
                        <skip>${skipInterProcessTests}</skip>
                        <groups>inter-process</groups>
                        <includes>
                            <include>**/*IntegratedTest.java,**/*IT.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <id>run-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>config/checkstyle/checkstyle.xml</configLocation>
                        <encoding>UTF-8</encoding>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <violationSeverity>warning</violationSeverity>
                        <failOnViolation>${verifyAllFailures}</failOnViolation>
                        <linkXRef>false</linkXRef>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <outputDirectory>target/site</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                                <goal>checkstyle</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <banTransitiveDependencies>
                                        <excludes>
                                            <exclude>*:*:*:*:test</exclude>
                                        </excludes>
                                    </banTransitiveDependencies>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>false</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${project.version}</Implementation-Build>
                            </manifestEntries>
                        </archive>
                    </configuration>
                    <executions>
                        <execution>
                            <id>build-test-jar</id>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                                <transformers>
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                                </transformers>
                                <filters>
                                    <filter>
                                        <artifact>io.fabric8:openshift-client</artifact>
                                        <excludes>
                                            <exclude>io/fabric8/kubernetes/client/Config*</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>io.quarkus</groupId>
                                <artifactId>quarkus-extension-processor</artifactId>
                                <version>${quarkus.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <compilerArgs>
                            <!--<arg>-verbose</arg>-->
                            <arg>-Xlint:unchecked</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven-javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven-gpg-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!--
            This profile is intended for build environments where we want the entire build to succeed, only to
            inspect the build output afterwards to decided whether to fail or not
            -->
            <id>cicd</id>
            <properties>
                <verifyAllFailures>false</verifyAllFailures>
                <ignoreAllFailures>true</ignoreAllFailures>
            </properties>
        </profile>
        <profile>
            <!--This profile is executed right in the beginning of the pipeline. For instance, this is the first step
             that is executed to verify that the changes in the pull request comply to the coding standards in
             Checkstyle, have test sufficient coverage and don't have any dependencies with known vulnerabilities.
             No inter-process communication should take place during test execution, as no standard communication with
             Kubernetes is configured at this point. Also, only in-process  tests should contribute towards code
             coverage, as we need to keep the execution time of these tests as low as possible. Ultimately if
             we increase the confidence in our in-process tests (e.g. coverage) whilst keeping their execution time
             down, the chances of them being  executed regularly increases and our confidence increases.
             -->
            <id>in-process-verification</id>
            <properties>
                <skipInProcessTests>false</skipInProcessTests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-checkstyle-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--This profile is executed right whenever a Maven artifact needs to be prepared and deployed to the
            default, local Nexus in Entando's build environment. Note that this will not necessarily result in
            a deployment to Maven Central, but the resulting artifact could potentially be deployed there if all the
            necessary quality steps succeed. This profile will typically be invoked  before the integration tests
            are executed, as these test may need to deploy the binary artifact (e.g. into a Docker image
            and/or Kubernetes).
            -->
            <id>prepare-for-nexus</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--This profile is only executed once all Docker images have been built, and are ready for deployment
            to Kubernetes. The assumption here is that there will be some form of inter-process communication with
            the code that has been deployed to the Docker image. This is the ideal context from which to execute
            end to end tests or integration tests that need to communicate with an external service. Standard
            connectivity with Kubernetes will be provided by means of the entando.default.routing.suffix
            system property. No code coverage will be done here, as the expectation is that the code owners
            will ensure that these types of tests traverse inter-process points of failure rather than code
            paths. This can not be done automatically.
            -->
            <id>inter-process-verification</id>
            <properties>
                <skipInterProcessTests>false</skipInterProcessTests>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--
            This profile executes the GraalVM compiler using Quarkus. The GraalVM build can be
            customized in child pom's by means of the 'quarkus.native.additional-build-args' maven property
            Please not that ! the format of this property value is extremely important:
             comma separated, no spaces, no linebreaks
            -->
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>native-image</goal>
                                </goals>
                                <configuration>
                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!--This profile uses Quarkus to place dependencies in target/lib. These can then
            be added to a Dockerfile if needed to ensure the application can run as expected.
            -->
            <id>jvm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <uberJar>false</uberJar>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-info</report>
                            <report>distribution-management</report>
                            <report>index</report>
                            <report>ci-management</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>plugins</report>
                            <report>scm</report>
                            <report>summary</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>

